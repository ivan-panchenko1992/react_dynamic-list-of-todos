{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","Api.js","App.jsx","index.js"],"names":["TodoList","state","serchOption","searchTitle","todos","props","todosFromServer","filteredTodoByTitle","event","value","target","setState","filter","todo","title","toLowerCase","includes","handleChange","filterTodosByOptions","item","completed","chooseUser","this","prepearedTodos","className","htmlFor","type","placeholder","id","onChange","map","key","classNames","onClick","userId","React","Component","CurrentUser","user","clearUser","name","email","phone","request","url","fetch","then","result","ok","Error","json","data","getTodos","getUsers","App","users","selectedUserId","userID","a","allUsers","allTodos","length","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3ae6c59.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport class TodoList extends React.Component {\n  state = {\n    serchOption: '',\n    searchTitle: '',\n    todos: this.props.todosFromServer,\n  }\n\n  filteredTodoByTitle = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      searchTitle: value,\n      todos: this.props.todosFromServer\n        .filter(todo => todo.title.toLowerCase()\n          .includes(value.toLowerCase())),\n    });\n  }\n\n  handleChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({ serchOption: value });\n  }\n\n  filterTodosByOptions = (todos) => {\n    const { serchOption } = this.state;\n\n    switch (serchOption) {\n      case 'Active':\n        return todos.filter(item => !item.completed);\n\n      case 'Completed':\n        return todos.filter(item => item.completed);\n      default:\n        return todos;\n    }\n  }\n\n  render() {\n    const { chooseUser } = this.props;\n    const { todos, searchTitle } = this.state;\n    const prepearedTodos = this.filterTodosByOptions(todos);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <label\n          htmlFor=\"title\"\n          className=\"label\"\n        >\n          Search title\n        </label>\n        <input\n          type=\"text\"\n          placeholder=\"Enter the title\"\n          id=\"title\"\n          className=\"input is-normal\"\n          value={searchTitle}\n          onChange={this.filteredTodoByTitle}\n        />\n        <select\n          className=\"select is-info\"\n          onChange={this.handleChange}\n        >\n          <option\n            value=\"All\"\n          >\n            All\n          </option>\n          <option\n            value=\"Active\"\n          >\n            Active\n          </option>\n          <option\n            value=\"Completed\"\n          >\n            Complete\n          </option>\n        </select>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {prepearedTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames('TodoList__item', {\n                  'TodoList__item--checked': todo.completed,\n                  'TodoList__item--unchecked': !todo.completed,\n                })}\n              >\n                <label>\n                  <p>{todo.completed ? '✔' : '❌'}</p>\n                  <p>{todo.title}</p>\n                </label>\n                <button\n                  className=\"TodoList__user-button button\"\n                  type=\"button\"\n                  onClick={() => chooseUser(todo.userId)}\n                >\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todosFromServer: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  chooseUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\n\nexport const CurrentUser = ({ user, clearUser }) => (\n  <div className=\"CurrentUser\">\n    <button\n      type=\"button\"\n      onClick={clearUser}\n    >\n      clear\n    </button>\n    <h2 className=\"CurrentUser__title\">\n      <span>\n        {`Selected user: ${user.id}`}\n      </span>\n    </h2>\n\n    <h3 className=\"CurrentUser__name\">{user.name}</h3>\n    <p className=\"CurrentUser__email\">{user.email}</p>\n    <p className=\"CurrentUser__phone\">{user.phone}</p>\n  </div>\n);\n\nCurrentUser.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n\n  }).isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com/';\n\nconst request = url => fetch(`${BASE_URL}${url}`)\n  .then((result) => {\n    if (!result.ok) {\n      throw (new Error('failed Data'));\n    }\n\n    return result.json();\n  })\n  .then(result => result.data)\n  .then((result) => {\n    if (url === 'todos') {\n      return result.filter(item => item.title);\n    }\n\n    return result;\n  });\n\nexport const getTodos = request('todos');\n\nexport const getUsers = request('users');\n","import React from 'react';\nimport 'bulma';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos, getUsers } from './Api';\n\nclass App extends React.Component {\n  state = {\n    users: [],\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const allUsers = await getUsers;\n    const allTodos = await getTodos;\n\n    this.setState({\n      users: allUsers,\n      todos: allTodos,\n    });\n  }\n\n  chooseUser = (userID) => {\n    this.setState({ selectedUserId: userID });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { users, todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          { !!todos.length && (\n          <TodoList\n            todosFromServer={todos}\n            chooseUser={this.chooseUser}\n          />\n          )\n          }\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                user={users.find(user => user.id === selectedUserId)}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}